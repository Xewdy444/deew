name: Build and publish

on: repository_dispatch

jobs:
  linux-build:
    name: Linux
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.fetch.outputs.RELEASE_VERSION }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Set up libraries
        run: |
          python -m pip install wheel pyinstaller
          python -m pip install .

      - name: Build
        run: pyinstaller -F __main__.py -n deew --icon logo/icon.ico

      - name: Create changelog file
        run: python -c "print('\n'.join(open('changelog.md', 'r').read().split('\n\n# deew')[0].split('\n')[1:]))" >> changelog.txt

      - name: Fetch changelog and version
        run: |
          python -c "print('\n'.join(open('changelog.md', 'r').read().split('\n\n# deew')[0].split('\n')[1:]))" >> changelog.txt
          version=$(python -c "print(open('changelog.md', 'r').read().split('\n')[0].split(' ')[2].replace(':', ''))")
          changelog=$(cat changelog.txt)
          echo -e "Version: $version\n\nChangelog:\n$changelog"
          echo "RELEASE_VERSION=$version" >> "$GITHUB_OUTPUT"

      - name: Move dist/deew to deew_linux
        run: mv dist/deew deew_linux

      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
          tag_name: ${{ steps.fetch.outputs.RELEASE_VERSION }}
          body_path: changelog.txt
          files: deew_linux

  windows-build:
    name: Windows
    runs-on: windows-latest
    needs: linux-build

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Set up libraries
        run: |
          python -m pip install wheel poetry
          python -m pip install "https://yt-dlp.github.io/Pyinstaller-Builds/x86_64/pyinstaller-5.3-py3-none-any.whl"
          python -m pip install .

      - name: Build
        run: |
          pyinstaller -F __main__.py -n deew --icon logo/icon.ico

      - name: Move dist/deew.exe to deew.exe
        run: mv dist/deew.exe deew.exe

      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
          tag_name: ${{ needs.linux-build.outputs.version }}
          files: deew.exe

      - name: Upload release to PyPI
        run: |
          poetry build
          poetry publish -u __token__ -p "${{ secrets.PYPI_TOKEN }}""

      - name: Send Telegram notifications
        continue-on-error: true
        run: |
          python dev_scripts/post/telegram.py "${{ secrets.TG_TOKEN }}" "${{ secrets.TG_CH1 }}"
          python dev_scripts/post/telegram.py "${{ secrets.TG_TOKEN }}" "${{ secrets.TG_CH2 }}"

      - name: Post changelog and update first post on Doom9
        continue-on-error: true
        run: python dev_scripts/post/doom9.py "${{ secrets.DOOM9_PASSWORD }}"

      - name: Post on some other sites too
        continue-on-error: true
        run: |
          curl -XPOST -u "pcroland:${{ secrets.GH_TOKEN }}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/pcroland/deew_posts/dispatches --data '{\"event_type\": \"Posting\"}'

      - name: Workflow finished
        run: echo "Workflow finished."
